{"version":3,"sources":["App.style.js","components/icon.style.js","components/icon.js","components/footer.js","components/SideArea.style.js","components/SideArea.js","components/MainArea.style.js","components/MainArea.js","App.js","serviceWorker.js","index.js"],"names":["bars","display","flexDirection","normal","position","color","transition","zIndex","hover","transform","iconBackground","width","height","textAlign","lineHeight","fontSize","margin","borderRadius","overflow","border","before","backgroundColor","Icon","props","useState","setHover","style","listStyle","onMouseEnter","onMouseLeave","background","bC","href","url","icon","size","Footer","className","faAt","faLinkedinIn","faGithub","faTwitter","faInstagram","faFacebookF","sidebar","minWidth","minHeight","Area","mainbar","App","SideArea","MainArea","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gOAEe,G,MAAA,CACbA,KAAM,CACJC,QAAS,OACTC,cAAe,S,qCCJJ,GACbC,OAAQ,CACNC,SAAU,WACVC,MAAO,OACPC,WAAY,MACZC,OAAQ,KAEVC,MAAO,CACLH,MAAO,OACPI,UAAW,mBAEbC,eAAgB,CACdC,MAAO,OACPC,OAAQ,OACRC,UAAW,SACXC,WAAY,OACZC,SAAU,OACVC,OAAQ,SACRf,QAAS,QACTgB,aAAc,MACdb,SAAU,WACVc,SAAU,SACVC,OAAQ,iBACRZ,OAAQ,IACRF,MAAO,QAETe,OAAQ,CACNC,gBAAiB,Y,OCWNC,MAnCf,SAAcC,GAAQ,IAAD,EACSC,oBAAS,GADlB,mBACVhB,EADU,KACHiB,EADG,KAEjB,OACI,6BACI,wBAAIC,MAAO,CAAEC,UAAW,SACpB,wBACIC,aAAc,WACVH,GAAS,IAEbI,aAAc,WACVJ,GAAS,IAEbC,MAAK,eACEA,EAAMhB,eADR,GAEGF,EAAQ,CAAEsB,WAAYP,EAAMQ,IAAOL,EAAMN,SAGjD,uBAAGY,KAAMT,EAAMU,KACX,kBAAC,IAAD,CACIP,MAAK,eACEA,EAAMvB,OADR,GAEGK,EAAQkB,EAAMlB,MAAQ,MAE9B0B,KAAMX,EAAMW,KACZC,KAAK,YCMlBC,MAtBf,WAGE,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,WAAf,iBACA,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAMH,KAAMI,IAAML,IAAK,8BAA+BF,GAAI,YAC1D,kBAAC,EAAD,CAAMG,KAAMK,IAAcR,GAAI,YAC9B,kBAAC,EAAD,CAAMG,KAAMM,IAAUT,GAAI,YAC1B,kBAAC,EAAD,CAAMG,KAAMO,IAAWV,GAAI,YAC3B,kBAAC,EAAD,CACEG,KAAMQ,IACNX,GACE,qGAGJ,kBAAC,EAAD,CAAMG,KAAMS,IAAaZ,GAAI,eC7BtB,GACba,QAAS,CACPvB,gBAAiB,UACbwB,SAAU,OACVC,UAAW,SACXzC,MAAM,UCAC0C,EAHF,WACT,OAAO,yBAAKrB,MAAOA,EAAMkB,SAAlB,aCHI,GACbI,QAAS,CACH3B,gBAAiB,OACnBwB,SAAS,OACTxC,MAAO,yBCEE0C,EAHF,WACT,OAAO,yBAAKrB,MAAOA,EAAMsB,SAAlB,aCaIC,MAZf,WACE,OACE,6BACE,yBAAKvB,MAAOA,EAAM1B,MAChB,kBAACkD,EAAD,MACF,kBAACC,EAAD,OAEE,kBAAC,EAAD,QCAYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9b11d398.chunk.js","sourcesContent":["\n\nexport default {\n  bars: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n};\n\n","\nexport default {\n  normal: {\n    position: 'relative',\n    color: '#fff',\n    transition: '.5s',\n    zIndex: '3',\n  },\n  hover: {\n    color: '#fff',\n    transform: 'rotateY(360deg)',\n  },\n  iconBackground: {\n    width: '60px',\n    height: '60px',\n    textAlign: 'center',\n    lineHeight: '60px',\n    fontSize: '35px',\n    margin: '0 10px',\n    display: 'block',\n    borderRadius: '50%',\n    position: 'relative',\n    overflow: 'hidden',\n    border: '3px solid #fff',\n    zIndex: '1',\n    color: '#fff',\n  },\n  before: {\n    backgroundColor: '#000000',\n  },\n\n};\n","import React,{useState} from \"react\";\nimport style from './icon.style.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Icon(props) {\n    const [hover, setHover] = useState(false);\n    return (\n        <div>\n            <ul style={{ listStyle: 'none' }}>\n                <li\n                    onMouseEnter={() => {\n                        setHover(true);\n                    }}\n                    onMouseLeave={() => {\n                        setHover(false);\n                    }}\n                    style={{\n                        ...style.iconBackground,\n                        ...(hover ? { background: props.bC } : style.before),\n                    }}\n                >\n                    <a href={props.url}>\n                        <FontAwesomeIcon\n                            style={{\n                                ...style.normal,\n                                ...(hover ? style.hover : null),\n                            }}\n                            icon={props.icon}\n                            size=\"xs\"\n                        />\n                    </a>\n                </li>\n            </ul>\n\n        </div>\n    );\n\n}\n        \nexport default Icon;","import React from 'react';\nimport './footer.css';\nimport {\n  faFacebookF,\n  faLinkedinIn,\n  faTwitter,\n  faGithub,\n  faInstagram\n} from '@fortawesome/free-brands-svg-icons';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\nimport Icon from './icon.js';\n\nfunction Footer() {\n \n\n  return (\n    <div className=\"Connectbar\">\n      <div className=\"Connect\">Let's Connect</div>\n      <div className=\"Iconsgroup\">\n        <Icon icon={faAt} url={'mailto:swetank199@gmail.com'} bC={'#ce473a'} />\n        <Icon icon={faLinkedinIn} bC={'#0077b5'} />\n        <Icon icon={faGithub} bC={'#24292e'} />\n        <Icon icon={faTwitter} bC={'#55acee'} />\n        <Icon\n          icon={faInstagram}\n          bC={\n            'radial-gradient(circle at 30% 110%, #ffdb8b 0%,#ee653d 25%,#d42e81 50%,#a237b6 75%,#3e5fbc 100%)'\n          }\n        />\n        <Icon icon={faFacebookF} bC={'#3b5999'} />\n      </div>\n    </div>\n  );\n}\nexport default Footer;\n","export default {\n  sidebar: {\n    backgroundColor: '#202020',\n        minWidth: '30vw',\n        minHeight: '85.1vh',\n        color:'white',\n//        color: 'rgba(255,255,255,.5)',\n  },\n};","import React from 'react';\nimport style from './SideArea.style.js';\nconst Area = () => {\n    return <div style={style.sidebar}>SideArea</div>;\n};\nexport default Area;","export default {\n  mainbar: {\n        backgroundColor: '#111',\n      minWidth:'70vw',\n      color: 'rgba(255,255,255,.5)',\n  },\n};  \n","import React from 'react';\nimport style from './MainArea.style.js';\n\nconst Area = () => {\n    return <div style={style.mainbar}>MainArea</div>;\n};\nexport default Area;","import React from 'react';\nimport style from './App.style.js';\nimport Footer from './components/footer';\nimport SideArea from './components/SideArea';\nimport MainArea from './components/MainArea';\nfunction App() {\n  return (\n    <div>\n      <div style={style.bars}>\n        <SideArea />\n      <MainArea/>\n      </div>\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}